{"autoMap": true, "category": "RNA-seq", "command": ["runKallisto.sh"], "description": "Alignment and quantification of reads from fastq files", "docker_image_name": "biodepot/kallisto", "docker_image_tag": "0.44.0__ubuntu-16.04__072818", "icon": "/data/kallistoquant.png", "inputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["indexFile", {"callback": null, "type": {"py/type": "__builtin__.str"}}]}, {"py/tuple": ["fastqFiles", {"callback": null, "type": {"py/type": "__builtin__.str"}}]}, {"py/tuple": ["trigger", {"callback": null, "type": {"py/type": "__builtin__.str"}}]}]}]}, "name": "kallistoQuant", "outputs": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputDir", {"default": null, "type": {"py/type": "__builtin__.str"}}]}]}]}, "parameters": {"py/reduce": [{"py/type": "collections.OrderedDict"}, {"py/tuple": []}, null, null, {"py/tuple": [{"py/tuple": ["outputDir", {"flag": "-o", "label": "Output directory", "type": "directory"}]}, {"py/tuple": ["indexFile", {"flag": "-i", "label": "indexFile", "type": "file"}]}, {"py/tuple": ["fastqFiles", {"argument": true, "flag": null, "label": "fastq files", "type": "file list"}]}, {"py/tuple": ["bootstrap", {"default": 30, "flag": "-b", "label": "Number of boostraps", "type": "int"}]}, {"py/tuple": ["seed", {"default": 42, "flag": "--seed=", "label": "Seed for bootstrap sampling", "type": "int"}]}, {"py/tuple": ["plaintext", {"flag": "--plantext", "label": "Output plaintext", "type": "bool"}]}, {"py/tuple": ["fusion", {"flag": "--fusion", "label": "Search for fusion genes", "type": "bool"}]}, {"py/tuple": ["single", {"flag": "--single", "label": "Quantify single-end reads", "type": "bool"}]}, {"py/tuple": ["single_overhang", {"flag": "--single-overhang", "label": "Include reads that go beyond transcript start", "type": "bool"}]}, {"py/tuple": ["fr_stranded", {"flag": "--fr-stranded", "label": "strand specific read - first read forward", "type": "bool"}]}, {"py/tuple": ["rf_stranded", {"flag": "--rf_stranded", "label": "strand specific read - first read reverse", "type": "bool"}]}, {"py/tuple": ["fragment_length", {"flag": "--fragment-length", "label": "Estimated fragment length", "type": "int"}]}, {"py/tuple": ["stdev", {"flag": "-s", "label": "Standard deviation of fragment length", "type": "double"}]}, {"py/tuple": ["nThreads", {"default": 1, "flag": "-t", "label": "Number of threads", "type": "int"}]}, {"py/tuple": ["pseudoBam", {"flag": "--pseudoBam", "label": "Save alignments to BAM file", "type": "bool"}]}, {"py/tuple": ["genomeBam", {"flag": "--genomeBam", "label": "Project alignments to sorted BAM file", "type": "bool"}]}, {"py/tuple": ["gtf", {"flag": "--gtf", "label": "GTF file", "type": "file"}]}, {"py/tuple": ["multiSample", {"default": 1, "env": "MULTISAMPLE", "flag": null, "label": "Multiple samples", "type": "int"}]}]}]}, "persistentSettings": "all", "ports": null, "priority": "4", "requiredParameters": ["outputDir", "indexFile", "fastqFiles", "nThreads"], "volumeMappings": [{"attr": "outputDir", "conVolume": "/root/output"}]}